name: PT-5 Security Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 1 * * 2'  # Weekly on Tuesday at 1 AM

jobs:
  pt5-security-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
    
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Run PT-5 Security Unit Tests
      run: |
        ./gradlew testDebugUnitTest --tests="com.frozo.ambientscribe.security.*" --continue
    
    - name: Run PT-5 Security Integration Tests
      run: |
        ./gradlew testDebugUnitTest --tests="com.frozo.ambientscribe.security.SecurityIntegrationTest" --continue
    
    - name: Run PT-5 Security Compliance Tests
      run: |
        ./gradlew testDebugUnitTest --tests="com.frozo.ambientscribe.security.SecurityComplianceTest" --continue
    
    - name: Run PT-5 Security Test Suite
      run: |
        ./gradlew testDebugUnitTest --tests="com.frozo.ambientscribe.security.PT5SecurityTestSuite" --continue
    
    - name: Generate Test Report
      run: |
        python scripts/generate_security_test_report.py
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pt5-security-test-results
        path: |
          app/build/reports/tests/
          security-test-report.html
          security-test-summary.json
        retention-days: 30
    
    - name: Comment PR with Security Test Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let comment = '## ðŸ”’ PT-5 Security Test Results\n\n';
          
          if (fs.existsSync('security-test-summary.json')) {
            const summary = JSON.parse(fs.readFileSync('security-test-summary.json', 'utf8'));
            comment += `### Test Summary\n`;
            comment += `- **Total Tests**: ${summary.totalTests}\n`;
            comment += `- **Passed**: ${summary.passed}\n`;
            comment += `- **Failed**: ${summary.failed}\n`;
            comment += `- **Coverage**: ${summary.coverage}%\n\n`;
          }
          
          comment += '### Security Components Tested\n';
          comment += '- âœ… Audit Logging and HMAC Chaining\n';
          comment += '- âœ… Encryption and Key Management\n';
          comment += '- âœ… Consent Management and DPDP Compliance\n';
          comment += '- âœ… Data Subject Rights and Privacy\n';
          comment += '- âœ… Threat Modeling and Privacy Review\n';
          comment += '- âœ… Vulnerability Scanning and SBOM\n';
          comment += '- âœ… Audit Chain Integrity and Recovery\n';
          comment += '- âœ… Keystore Hazard Management\n';
          comment += '- âœ… PHI Scrubbing and Data Protection\n';
          comment += '- âœ… CI/CD Security Integration\n\n';
          
          comment += '### Test Artifacts\n';
          comment += 'Detailed test results are available in the workflow artifacts.\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
