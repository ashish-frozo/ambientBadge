// Generated by view binder compiler. Do not edit!
package com.frozo.ambientscribe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.frozo.ambientscribe.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReviewBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton approveButton;

  @NonNull
  public final MaterialButton exportPdfButton;

  @NonNull
  public final ImageView prescriptionConfidenceIndicator;

  @NonNull
  public final RecyclerView prescriptionRecyclerView;

  @NonNull
  public final ImageView soapConfidenceIndicator;

  @NonNull
  public final RecyclerView soapRecyclerView;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityReviewBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton approveButton, @NonNull MaterialButton exportPdfButton,
      @NonNull ImageView prescriptionConfidenceIndicator,
      @NonNull RecyclerView prescriptionRecyclerView, @NonNull ImageView soapConfidenceIndicator,
      @NonNull RecyclerView soapRecyclerView, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.approveButton = approveButton;
    this.exportPdfButton = exportPdfButton;
    this.prescriptionConfidenceIndicator = prescriptionConfidenceIndicator;
    this.prescriptionRecyclerView = prescriptionRecyclerView;
    this.soapConfidenceIndicator = soapConfidenceIndicator;
    this.soapRecyclerView = soapRecyclerView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.approve_button;
      MaterialButton approveButton = ViewBindings.findChildViewById(rootView, id);
      if (approveButton == null) {
        break missingId;
      }

      id = R.id.export_pdf_button;
      MaterialButton exportPdfButton = ViewBindings.findChildViewById(rootView, id);
      if (exportPdfButton == null) {
        break missingId;
      }

      id = R.id.prescription_confidence_indicator;
      ImageView prescriptionConfidenceIndicator = ViewBindings.findChildViewById(rootView, id);
      if (prescriptionConfidenceIndicator == null) {
        break missingId;
      }

      id = R.id.prescription_recycler_view;
      RecyclerView prescriptionRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (prescriptionRecyclerView == null) {
        break missingId;
      }

      id = R.id.soap_confidence_indicator;
      ImageView soapConfidenceIndicator = ViewBindings.findChildViewById(rootView, id);
      if (soapConfidenceIndicator == null) {
        break missingId;
      }

      id = R.id.soap_recycler_view;
      RecyclerView soapRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (soapRecyclerView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityReviewBinding((CoordinatorLayout) rootView, approveButton, exportPdfButton,
          prescriptionConfidenceIndicator, prescriptionRecyclerView, soapConfidenceIndicator,
          soapRecyclerView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
