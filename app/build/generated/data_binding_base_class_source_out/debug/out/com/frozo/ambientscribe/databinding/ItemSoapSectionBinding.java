// Generated by view binder compiler. Do not edit!
package com.frozo.ambientscribe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.frozo.ambientscribe.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSoapSectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton addItemButton;

  @NonNull
  public final ImageView confidenceIndicator;

  @NonNull
  public final RecyclerView itemsRecyclerView;

  @NonNull
  public final TextView sectionTitle;

  private ItemSoapSectionBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton addItemButton, @NonNull ImageView confidenceIndicator,
      @NonNull RecyclerView itemsRecyclerView, @NonNull TextView sectionTitle) {
    this.rootView = rootView;
    this.addItemButton = addItemButton;
    this.confidenceIndicator = confidenceIndicator;
    this.itemsRecyclerView = itemsRecyclerView;
    this.sectionTitle = sectionTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSoapSectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSoapSectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_soap_section, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSoapSectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_item_button;
      MaterialButton addItemButton = ViewBindings.findChildViewById(rootView, id);
      if (addItemButton == null) {
        break missingId;
      }

      id = R.id.confidence_indicator;
      ImageView confidenceIndicator = ViewBindings.findChildViewById(rootView, id);
      if (confidenceIndicator == null) {
        break missingId;
      }

      id = R.id.items_recycler_view;
      RecyclerView itemsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (itemsRecyclerView == null) {
        break missingId;
      }

      id = R.id.section_title;
      TextView sectionTitle = ViewBindings.findChildViewById(rootView, id);
      if (sectionTitle == null) {
        break missingId;
      }

      return new ItemSoapSectionBinding((LinearLayout) rootView, addItemButton, confidenceIndicator,
          itemsRecyclerView, sectionTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
