// Generated by view binder compiler. Do not edit!
package com.frozo.ambientscribe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.frozo.ambientscribe.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPrescriptionMedicationBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView confidenceIndicator;

  @NonNull
  public final MaterialButton deleteButton;

  @NonNull
  public final TextInputEditText dosageEdit;

  @NonNull
  public final TextInputLayout dosageLayout;

  @NonNull
  public final TextInputEditText durationEdit;

  @NonNull
  public final TextInputLayout durationLayout;

  @NonNull
  public final TextInputEditText frequencyEdit;

  @NonNull
  public final TextInputLayout frequencyLayout;

  @NonNull
  public final SwitchMaterial genericSwitch;

  @NonNull
  public final TextInputEditText instructionsEdit;

  @NonNull
  public final TextInputLayout instructionsLayout;

  @NonNull
  public final TextInputEditText nameEdit;

  @NonNull
  public final TextInputLayout nameLayout;

  private ItemPrescriptionMedicationBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView confidenceIndicator, @NonNull MaterialButton deleteButton,
      @NonNull TextInputEditText dosageEdit, @NonNull TextInputLayout dosageLayout,
      @NonNull TextInputEditText durationEdit, @NonNull TextInputLayout durationLayout,
      @NonNull TextInputEditText frequencyEdit, @NonNull TextInputLayout frequencyLayout,
      @NonNull SwitchMaterial genericSwitch, @NonNull TextInputEditText instructionsEdit,
      @NonNull TextInputLayout instructionsLayout, @NonNull TextInputEditText nameEdit,
      @NonNull TextInputLayout nameLayout) {
    this.rootView = rootView;
    this.confidenceIndicator = confidenceIndicator;
    this.deleteButton = deleteButton;
    this.dosageEdit = dosageEdit;
    this.dosageLayout = dosageLayout;
    this.durationEdit = durationEdit;
    this.durationLayout = durationLayout;
    this.frequencyEdit = frequencyEdit;
    this.frequencyLayout = frequencyLayout;
    this.genericSwitch = genericSwitch;
    this.instructionsEdit = instructionsEdit;
    this.instructionsLayout = instructionsLayout;
    this.nameEdit = nameEdit;
    this.nameLayout = nameLayout;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPrescriptionMedicationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPrescriptionMedicationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_prescription_medication, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPrescriptionMedicationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confidence_indicator;
      ImageView confidenceIndicator = ViewBindings.findChildViewById(rootView, id);
      if (confidenceIndicator == null) {
        break missingId;
      }

      id = R.id.delete_button;
      MaterialButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.dosage_edit;
      TextInputEditText dosageEdit = ViewBindings.findChildViewById(rootView, id);
      if (dosageEdit == null) {
        break missingId;
      }

      id = R.id.dosage_layout;
      TextInputLayout dosageLayout = ViewBindings.findChildViewById(rootView, id);
      if (dosageLayout == null) {
        break missingId;
      }

      id = R.id.duration_edit;
      TextInputEditText durationEdit = ViewBindings.findChildViewById(rootView, id);
      if (durationEdit == null) {
        break missingId;
      }

      id = R.id.duration_layout;
      TextInputLayout durationLayout = ViewBindings.findChildViewById(rootView, id);
      if (durationLayout == null) {
        break missingId;
      }

      id = R.id.frequency_edit;
      TextInputEditText frequencyEdit = ViewBindings.findChildViewById(rootView, id);
      if (frequencyEdit == null) {
        break missingId;
      }

      id = R.id.frequency_layout;
      TextInputLayout frequencyLayout = ViewBindings.findChildViewById(rootView, id);
      if (frequencyLayout == null) {
        break missingId;
      }

      id = R.id.generic_switch;
      SwitchMaterial genericSwitch = ViewBindings.findChildViewById(rootView, id);
      if (genericSwitch == null) {
        break missingId;
      }

      id = R.id.instructions_edit;
      TextInputEditText instructionsEdit = ViewBindings.findChildViewById(rootView, id);
      if (instructionsEdit == null) {
        break missingId;
      }

      id = R.id.instructions_layout;
      TextInputLayout instructionsLayout = ViewBindings.findChildViewById(rootView, id);
      if (instructionsLayout == null) {
        break missingId;
      }

      id = R.id.name_edit;
      TextInputEditText nameEdit = ViewBindings.findChildViewById(rootView, id);
      if (nameEdit == null) {
        break missingId;
      }

      id = R.id.name_layout;
      TextInputLayout nameLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameLayout == null) {
        break missingId;
      }

      return new ItemPrescriptionMedicationBinding((MaterialCardView) rootView, confidenceIndicator,
          deleteButton, dosageEdit, dosageLayout, durationEdit, durationLayout, frequencyEdit,
          frequencyLayout, genericSwitch, instructionsEdit, instructionsLayout, nameEdit,
          nameLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
