// Generated by view binder compiler. Do not edit!
package com.frozo.ambientscribe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.frozo.ambientscribe.R;
import com.frozo.ambientscribe.ui.ASRErrorView;
import com.frozo.ambientscribe.ui.AudioProcessingSettingsView;
import com.frozo.ambientscribe.ui.SpeakerRoleView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AudioProcessingSettingsView audioProcessingSettingsView;

  @NonNull
  public final LinearLayout controlsLayout;

  @NonNull
  public final Button deleteLast30sButton;

  @NonNull
  public final CheckBox ephemeralModeCheckbox;

  @NonNull
  public final ASRErrorView errorView;

  @NonNull
  public final Button recordButton;

  @NonNull
  public final View recordingIndicator;

  @NonNull
  public final SpeakerRoleView speakerRoleView;

  @NonNull
  public final Button swapRolesButton;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final CardView transcriptionCard;

  @NonNull
  public final TextView transcriptionTextView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull AudioProcessingSettingsView audioProcessingSettingsView,
      @NonNull LinearLayout controlsLayout, @NonNull Button deleteLast30sButton,
      @NonNull CheckBox ephemeralModeCheckbox, @NonNull ASRErrorView errorView,
      @NonNull Button recordButton, @NonNull View recordingIndicator,
      @NonNull SpeakerRoleView speakerRoleView, @NonNull Button swapRolesButton,
      @NonNull TextView titleText, @NonNull CardView transcriptionCard,
      @NonNull TextView transcriptionTextView) {
    this.rootView = rootView;
    this.audioProcessingSettingsView = audioProcessingSettingsView;
    this.controlsLayout = controlsLayout;
    this.deleteLast30sButton = deleteLast30sButton;
    this.ephemeralModeCheckbox = ephemeralModeCheckbox;
    this.errorView = errorView;
    this.recordButton = recordButton;
    this.recordingIndicator = recordingIndicator;
    this.speakerRoleView = speakerRoleView;
    this.swapRolesButton = swapRolesButton;
    this.titleText = titleText;
    this.transcriptionCard = transcriptionCard;
    this.transcriptionTextView = transcriptionTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audioProcessingSettingsView;
      AudioProcessingSettingsView audioProcessingSettingsView = ViewBindings.findChildViewById(rootView, id);
      if (audioProcessingSettingsView == null) {
        break missingId;
      }

      id = R.id.controlsLayout;
      LinearLayout controlsLayout = ViewBindings.findChildViewById(rootView, id);
      if (controlsLayout == null) {
        break missingId;
      }

      id = R.id.deleteLast30sButton;
      Button deleteLast30sButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteLast30sButton == null) {
        break missingId;
      }

      id = R.id.ephemeralModeCheckbox;
      CheckBox ephemeralModeCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (ephemeralModeCheckbox == null) {
        break missingId;
      }

      id = R.id.errorView;
      ASRErrorView errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      id = R.id.recordButton;
      Button recordButton = ViewBindings.findChildViewById(rootView, id);
      if (recordButton == null) {
        break missingId;
      }

      id = R.id.recordingIndicator;
      View recordingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (recordingIndicator == null) {
        break missingId;
      }

      id = R.id.speakerRoleView;
      SpeakerRoleView speakerRoleView = ViewBindings.findChildViewById(rootView, id);
      if (speakerRoleView == null) {
        break missingId;
      }

      id = R.id.swapRolesButton;
      Button swapRolesButton = ViewBindings.findChildViewById(rootView, id);
      if (swapRolesButton == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.transcriptionCard;
      CardView transcriptionCard = ViewBindings.findChildViewById(rootView, id);
      if (transcriptionCard == null) {
        break missingId;
      }

      id = R.id.transcriptionTextView;
      TextView transcriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (transcriptionTextView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, audioProcessingSettingsView,
          controlsLayout, deleteLast30sButton, ephemeralModeCheckbox, errorView, recordButton,
          recordingIndicator, speakerRoleView, swapRolesButton, titleText, transcriptionCard,
          transcriptionTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
